name: Deploy Laravel API

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
      EC2_HOST: ${{ secrets.EC2_HOST }} # Your EC2 instance IP/hostname
      EC2_USER: ubuntu                  # Default EC2 user (adjust if different)
      IMAGE_NAME: johnbibs/laravel-api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest .
          docker push ${{ env.IMAGE_NAME }}:latest

      - name: Setup SSH key
        run: |
          echo "${{ env.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: 🐳 Deploy Docker Container on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.EC2_USER }}@${{ env.EC2_HOST }} << EOF
            # Login to DockerHub
            echo "${DOCKERHUB_TOKEN}" | sudo docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

            # Pull the latest image
            sudo docker pull ${{ env.IMAGE_NAME }}:latest

            # Stop and remove old container if exists
            sudo docker stop vue-app || true
            sudo docker rm vue-app || true

            # Run new container with restart policy
            sudo docker run -d --name vue-app --restart unless-stopped -p 80:80 ${{ env.IMAGE_NAME }}:latest

            # Clean up unused images
            sudo docker image prune -f
          EOF

