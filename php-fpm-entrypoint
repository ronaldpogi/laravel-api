#!/usr/bin/env bash
set -euo pipefail

log() { echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')] $*"; }

main() {
  if [ "${IS_WORKER:-false}" = "true" ]; then
    log "Starting as queue worker..."
    prepare_storage
    wait_for_db
    optimize_app
    exec "$@"
  else
    log "Starting PHP-FPM app..."
    prepare_file_permissions
    prepare_storage
    wait_for_db
    run_migrations
    optimize_app
    exec /usr/local/bin/docker-php-entrypoint "$@"
  fi
}

prepare_file_permissions() {
  chmod a+x ./artisan || true
}

prepare_storage() {
  mkdir -p storage/framework/cache/data storage/framework/sessions storage/framework/views
  chown -R www-data:www-data storage bootstrap/cache || true
  chmod -R 775 storage bootstrap/cache || true
  php artisan storage:link || true
}

wait_for_db() {
  : "${DB_HOST:=${POSTGRES_HOST:-db}}"
  : "${DB_PORT:=5432}"
  log "Waiting for Postgres at ${DB_HOST}:${DB_PORT}..."
  until pg_isready -h "${DB_HOST}" -p "${DB_PORT}" >/dev/null 2>&1; do
    sleep 2
  done
  log "Postgres is ready."
}

run_migrations() {
  if [ "${RUN_MIGRATIONS:-true}" = "true" ]; then
    log "Running migrations..."
    php artisan migrate:fresh --force
    if [ "${RUN_SEEDERS:-false}" = "true" ]; then
      log "Running seeders..."
      php artisan db:seed --force
    fi
  fi
}

optimize_app() {
  php artisan config:clear || true
  php artisan route:clear || true
  php artisan view:clear || true
  php artisan optimize || true
}

main "$@"
