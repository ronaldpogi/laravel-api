version: "3.9"

services:
  app:
    image: ${IMAGE_NAME}:latest
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      # Persist (will be wiped each deploy by the Action as requested)
      - storage:/usr/share/nginx/html/storage
      - public:/usr/share/nginx/html/public
    networks: [appnet]
    expose:
      - "9000"

  queue-worker:
    image: ${IMAGE_NAME}:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      IS_WORKER: "true"
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        echo 'üîÑ Ensuring storage permissions...' &&
        mkdir -p storage/framework/{cache,views,sessions} bootstrap/cache &&
        chown -R www-data:www-data storage bootstrap/cache &&
        chmod -R 775 storage bootstrap/cache &&
        echo 'üîÑ Waiting for DB to be ready...' &&
        until nc -z db 3306; do
          echo '‚è≥ Still waiting for DB...'
          sleep 2
        done &&
        echo '‚úÖ DB is ready, starting worker...' &&
        php artisan config:clear &&
        php artisan cache:clear &&
        php artisan queue:work --tries=3 --backoff=5 --verbose --timeout=90
      "
    volumes:
      - storage:/usr/share/nginx/html/storage
      - public:/usr/share/nginx/html/public
    networks: [appnet]

  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - public:/usr/share/nginx/html/public:ro
      - storage:/usr/share/nginx/html/storage:ro
    networks: [appnet]

  db:
    image: mysql:8.0.36
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
    command: [
      "--default-authentication-plugin=mysql_native_password",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      "--max_connections=300"
    ]
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u${DB_USERNAME} -p${DB_PASSWORD} || exit 1"]
      interval: 10s
      retries: 10
      timeout: 5s
    networks: [appnet]

volumes:
  storage:
  public:
  db-data:

networks:
  appnet:
    driver: bridge
