services:
  app:
    image: ${IMAGE_NAME}:latest
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - storage-logs:/usr/share/nginx/html/storage/logs
      - storage-framework:/usr/share/nginx/html/storage/framework
      - public:/usr/share/nginx/html/public
    networks: [appnet]
    expose:
      - "9000"

  queue-worker:
    image: ${IMAGE_NAME}:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      IS_WORKER: "true"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - storage-logs:/usr/share/nginx/html/storage/logs
      - storage-framework:/usr/share/nginx/html/storage/framework
      - public:/usr/share/nginx/html/public
    networks: [appnet]

  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - app
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - public:/usr/share/nginx/html/public:ro
      - storage-logs:/usr/share/nginx/html/storage/logs:ro
      # Note: NGINX normally doesn't need framework/queue data
    networks: [appnet]

  db:
    image: mysql:8.0.36
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u${DB_USERNAME} -p${DB_PASSWORD} || exit 1"]
      interval: 10s
      retries: 10
      timeout: 5s
    networks: [appnet]

volumes:
  storage-logs:
  storage-framework:
  public:
  db-data:

networks:
  appnet:
    driver: bridge
